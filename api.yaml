swagger: '2.0'

schemes:
  - http
  - https

host: localhost:8085
basePath: /bytebank-api/v1

info:
  version: 1.0.0
  title: ByteBank Api

securityDefinitions:
  BasicAuth:
    type: basic

security:
  - BasicAuth: []

consumes:
  - application/json
produces:
  - application/json

tags:
  - name: Customer
  - name: Account
  - name: Statement
  - name: Transaction

paths:
  '/customer':
    post:
      tags:
        - Customer
      summary: Create customer
      description: Create new customer
      operationId: createCustomer
      parameters:
        - in: body
          name: customer_
          schema:
            $ref: '#/definitions/Customer'
      responses:
        201:
          description: Registration successfully
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Bad request
        500:
          description: Internal Server error

  '/account/{agency}/{number}/{digit}/balance':
    get:
      tags:
        - Account
      summary: Query balance
      description: Check customer balance
      operationId: queryBalance
      security:
        - BasicAuth: []
      parameters:
        - in: path
          name: agency
          type: integer
          format: int32
          required: true
        - in: path
          name: number
          type: integer
          format: int64
          required: true
        - in: path
          name: digit
          type: integer
          format: int32
          required: true
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: Successfully query
          schema:
            type: number
            format: double
            example: 134.68
        400:
          description: Bad request
        401:
          description: Unauthorized request
        500:
          description: Internal Server error

  '/statement/{agency}/{number}/{digit}':
    get:
      tags:
        - Statement
      summary: Query statement
      description: Query consumer statement
      operationId: queryStatement
      security:
        - BasicAuth: []
      parameters:
        - in: path
          name: agency
          type: integer
          format: int32
          required: true
        - in: path
          name: number
          type: integer
          format: int64
          required: true
        - in: path
          name: digit
          type: integer
          format: int32
          required: true
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: Query consumer statement successfully
          schema:
            $ref: '#/definitions/Statement'
        400:
          description: Bad request
        401:
          description: Unauthorized request
        500:
          description: Internal Server error

  '/transaction':
    post:
      tags:
        - Transaction
      summary: Create account transaction
      description: Create transaction (debit or deposit) in account.
      operationId: createTransaction
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: transaction
          schema:
            $ref: '#/definitions/Transaction'
          required: true
        - in: query
          name: type
          type: string
          enum:
          - debit
          - deposit
          required: true
      responses:
        '201':
          description: Transaction successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized request.
        '500':
          description: Internal Server error.

  '/transaction/{code}':
    put:
      tags:
        - Transaction
      summary: Alter transaction
      description: Changes the value of an existing transaction.
      operationId: changeValueTransaction
      security:
        - BasicAuth: []
      parameters:
        - in: path
          name: code
          type: integer
          format: int64
          required: true
        - in: query
          name: value
          type: number
          format: double
          required: true
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        '204':
          description: Successfully changed
        '400':
          description: Bad request.
        '401':
          description: Unauthorized request.
        '404':
          description: Not found
        '500':
          description: Internal Server error.

    delete:
      tags:
        - Transaction
      summary: Delete transaction
      description: Delete transaction.
      operationId: deleteTransaction
      security:
        - BasicAuth: []
      parameters:
        - in: path
          name: code
          required: true
          type: integer
          format: int64
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        '204':
          description: Successfully deleted
        '400':
          description: Bad request.
        '401':
          description: Unauthorized request.
        '404':
          description: Not found
        '500':
          description: Internal Server error

definitions:
  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 234
      holder:
        type: string
        example: Jane Doe
      tax:
        type: string
        minLength: 11
        maxLength: 11
        example: 01234567890
      password:
        type: string
        format: password
        example: password
      Accounts:
        type: array
        items:
          $ref: '#/definitions/Account'

  Account:
    type: object
    properties:
      agency:
        type: integer
        format: int32
        example: 975
      number:
        type: integer
        format: int64
        example: 784563
      digit:
        type: integer
        format: int32
        example: 7
      balance:
        type: number
        format: double
        example: 101.34
      customer:
        $ref: '#/definitions/Customer'
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  Transaction:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
        enum:
          - debit
          - deposit
      value:
        type: number
        format: double
      data:
        type: string
        format: date-time
      account:
        $ref: '#/definitions/Account'

  Statement:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'      
